[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-4.4.1-NM_Statistics",
    "section": "",
    "text": "[1] \"연도: 2024 - totalCount: 0\"\n[1] \"연도: 2023 - totalCount: 6\"\n[1] \"연도: 2022 - totalCount: 6\"\n[1] \"연도: 2021 - totalCount: 6\"\n[1] \"연도: 2020 - totalCount: 6\"\n[1] \"연도: 2019 - totalCount: 6\"\n[1] \"연도: 2018 - totalCount: 5\"\n[1] \"totalCount가 5에 도달하여 루프를 종료합니다.\"\n\n\n\n\n[1] \"연도: 2024 - totalCount: 0\"\n[1] \"연도: 2023 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2022 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2021 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2020 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2019 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2018 - totalCount: 5\"\n[1] \"totalCount가 5에 도달하여 루프를 종료합니다.\"\n\n\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:plyr':\n\n    arrange, count, desc, failwith, id, mutate, rename, summarise,\n    summarize\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n[1] \"연도: 2024 - totalCount: 0\"\n[1] \"연도: 2023 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2022 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2021 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2020 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2019 - totalCount: 6\"\n[1] \"saved\"\n[1] \"연도: 2018 - totalCount: 5\"\n[1] \"totalCount가 5에 도달하여 루프를 종료합니다.\"\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 800\n\n# Shiny 패키지 로드\nlibrary(shiny)\nlibrary(httr)\nlibrary(rjson)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# UI 구성\nui &lt;- fluidPage(\n  titlePanel(\"Medical Data Chart by Medical Code\"),\n  sidebarLayout(\n    sidebarPanel(\n      textInput(\"st5Cd\", \"Enter Medical Code (e.g., HK010):\", value = \"HK010\"),\n      actionButton(\"generate\", \"Generate Chart\")\n    ),\n    mainPanel(\n      plotOutput(\"chart\")\n    )\n  )\n)\n\n# Server 로직 구성\nserver &lt;- function(input, output, session) {\n  # 데이터를 저장할 reactiveValues 객체 생성\n  rv &lt;- reactiveValues(data = NULL)\n\n  observeEvent(input$generate, {\n    my_st5Cd &lt;- input$st5Cd\n    my_year &lt;- as.numeric(format(Sys.Date(), \"%Y\"))\n\n    base_url &lt;- \"http://apis.data.go.kr/B551182/mdlrtActionInfoService\"\n    call_url &lt;- \"getMdlrtActionByClassesStats\"\n    My_API_Key &lt;- \"DRwFWZ/jfi6551teJKgRhkKgC+XhcjobN+ccY2MQdF9yZdx8xL5Kn4IljljMCWGsl2ObEco/rm21r14CN7iG0g==\"\n    \n    data_frame &lt;- data.frame()\n    xcondition &lt;- TRUE  \n\n    while (xcondition) {\n      # API 요청 매개변수 설정\n      params &lt;- list(\n        serviceKey = URLencode(My_API_Key),\n        pageNo = 1,\n        numOfRows = 10,\n        resultType = \"json\",\n        year = as.character(my_year),\n        stdType = \"1\",\n        st5Cd = my_st5Cd\n      )\n      \n      # API 호출\n      url &lt;- paste0(base_url, \"/\", call_url)\n      response &lt;- GET(url, query = params)\n\n      if (status_code(response) == 200) {\n        json_text &lt;- content(response, as = \"text\", encoding = \"UTF-8\")\n        data &lt;- fromJSON(json_text)\n        \n        if (!is.null(data$response$body$totalCount)) {\n          if (data$response$body$totalCount == 6) {\n            data_list &lt;- data$response$body$items$item\n            df &lt;- rbind.fill(lapply(data_list, as.data.frame))\n            data_frame &lt;- rbind(data_frame, df)\n          }\n          \n          if (data$response$body$totalCount == 5) {\n            xcondition &lt;- FALSE\n          }\n        } else {\n          xcondition &lt;- FALSE\n        }\n      } else {\n        xcondition &lt;- FALSE\n      }\n      \n      # 연도를 1 감소\n      my_year &lt;- my_year - 1\n    }\n    \n    # 컬럼명 변경\n    if (nrow(data_frame) &gt; 0) {\n      rv$data &lt;- setNames(data_frame, c(\"진료금액\", \"요양기관종별\", \"환자수\", \"행위코드\", \"행위코드명\", \"총사용량\", \"연도\"))\n    } else {\n      rv$data &lt;- NULL\n    }\n  })\n\n  output$chart &lt;- renderPlot({\n    if (!is.null(rv$data)) {\n      ggplot(data = rv$data, aes(x = 연도, y = 총사용량, color = 요양기관종별)) +\n        geom_line(size = 1) + \n        geom_point(size = 2) + \n        labs(\n          title = paste(input$st5Cd, \"연도별 요양기관종별 총사용량\"),\n          x = \"연도\",\n          y = \"총사용량\"\n        ) +\n        theme_minimal() +\n        theme(legend.title = element_blank())\n    }\n  })\n}\n\n# Shiny 앱 실행\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]